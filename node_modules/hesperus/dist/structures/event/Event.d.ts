/**
 * This class represents options that can be passed to the Event class.
 */
export interface EventOptions {
    /** Name of event to handle. */
    name: string;
    /** Should we listen to this event multiply times? */
    once: boolean;
    /** Function that will be executed when event is being fired. */
    callback(...args: any[]): Promise<void>;
}
/**
 * This class represents event that can be handled by the event handler.
 */
export declare class Event {
    private readonly options;
    /**
     * @param {EventOptions} options Event's options.
     */
    constructor(options: EventOptions);
    /**
     * Get name of the handling event.
     *
     * @return {string}
     */
    get name(): string;
    /**
     * Should we listen to this event multiply times?
     *
     * @return {boolean}
     */
    get once(): boolean;
    /**
     * Function that will be executed when event is being fired.
     *
     * @return {Function}
     */
    get callback(): Function;
}
