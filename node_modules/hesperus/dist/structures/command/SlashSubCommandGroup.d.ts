import { LocalizationMap } from 'discord-api-types/v10';
import { SlashCommand } from './SlashCommand';
/**
 * This class represents options that can be passed to the
 * slash subcommand group class.
 */
export interface SlashSubCommandGroupOptions {
    /** Name of this subcommand group. */
    name: string;
    /** Localizations for name of this subcommand group. */
    nameLocalizations?: LocalizationMap;
    /** Description of this subcommand group. */
    description: string;
    /** Localizations for description of this subcommand group. */
    descriptionLocalizations?: LocalizationMap;
    /** Commands of this subcommand group. */
    commands: SlashCommand[];
}
/**
 * This class represents slash sub command's group.
 */
export declare class SlashSubCommandGroup {
    private readonly _options;
    /**
     * @param {SlashSubCommandGroupOptions} _options Options for this group.
     */
    constructor(_options: SlashSubCommandGroupOptions);
    /**
     * Name of this subcommand group.
     *
     * @return {string}
     */
    get name(): string;
    /**
     * Localizations for name of this subcommand group.
     *
     * @return {LocalizationMap | undefined}
     */
    get nameLocalizations(): LocalizationMap | undefined;
    /**
     * Description of this subcommand group.
     *
     * @return {string}
     */
    get description(): string;
    /**
     * Localizations for description of this subcommand group.
     *
     * @return {LocalizationMap | undefined}
     */
    get descriptionLocalizations(): LocalizationMap | undefined;
    /**
     * Commands of this subcommand group.
     *
     * @return {SlashCommand[]}
     */
    get commands(): SlashCommand[];
    /**
     * This method allows you to convert this class to suitable
     * (for Discord) JSON.
     *
     * @return {object} Converted class.
     */
    toJSON(): object;
}
