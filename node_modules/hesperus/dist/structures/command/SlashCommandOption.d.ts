import { LocalizationMap } from 'discord-api-types/v10';
import { SlashCommandChoice } from './SlashCommandChoice';
/**
 * This enum represents slash command's option type.
 */
export declare enum SlashCommandOptionType {
    SUB_COMMAND = 1,
    SUB_COMMAND_GROUP = 2,
    STRING = 3,
    INTEGER = 4,
    BOOLEAN = 5,
    USER = 6,
    CHANNEL = 7,
    ROLE = 8,
    MENTIONABLE = 9,
    NUMBER = 10,
    ATTACHMENT = 11
}
/**
 * This enum represents slash command's channel types.
 */
export declare enum ChannelTypes {
    GUILD_TEXT = 0,
    DM = 1,
    GUILD_VOICE = 2,
    GROUP_DM = 3,
    GUILD_CATEGORY = 4,
    GUILD_NEWS = 5,
    GUILD_NEWS_THREAD = 10,
    GUILD_PUBLIC_THREAD = 11,
    GUILD_PRIVATE_THREAD = 12,
    GUILD_STAGE_VOICE = 13,
    GUILD_DIRECTORY = 14,
    GUILD_FORUM = 15
}
/**
 * This interface represents options that can be passed to the
 * slash command option class.
 */
export interface SlashCommandOptionOptions {
    /** Type of this slash command option. */
    type: SlashCommandOptionType;
    /** Name of this slash command option. */
    name: string;
    /** Localizations for name of this slash command option. */
    nameLocalizations?: LocalizationMap;
    /** Description of this slash command option. */
    description: string;
    /** Localizations for description of this slash command option. */
    descriptionLocalizations?: LocalizationMap;
    /** Whether this slash command option is required. */
    required?: boolean;
    /** Choices of this slash command option. */
    choices?: SlashCommandChoice[];
    /** Types of channel of this slash command option (only for `CHANNEL` type). */
    channelTypes?: ChannelTypes[];
    /**
     * Minimal value of this slash command option
     * (only for `INTEGER` and `NUMBER` types).
     */
    minValue?: number;
    /**
     * Maximal value of this slash command option
     * (only for `INTEGER` and `NUMBER` types).
     */
    maxValue?: number;
    /** Whether we should enable autocomplete of this slash command option. */
    autocomplete?: boolean;
}
/**
 * This class represents option for command, that can be added to it.
 */
export declare class SlashCommandOption {
    private readonly _options;
    /**
     * @param {SlashCommandOptionOptions} _options Option's options.
     */
    constructor(_options: SlashCommandOptionOptions);
    /**
     * Type of this slash command option.
     *
     * @return {SlashCommandOptionType}
     */
    get type(): SlashCommandOptionType;
    /**
     * Name of this slash command option.
     *
     * @return {string}
     */
    get name(): string;
    /**
     * Localizations for name of this slash command option.
     *
     * @return {LocalizationMap | undefined}
     */
    get nameLocalizations(): LocalizationMap | undefined;
    /**
     * Descriptions of this slash command option.
     *
     * @return {string}
     */
    get description(): string;
    /**
     * Localizations for description of this slash command option.
     *
     * @return {LocalizationMap | undefined}
     */
    get descriptionLocalizations(): LocalizationMap | undefined;
    /**
     * Whether this slash command option is required.
     *
     * @return {boolean | undefined}
     */
    get required(): boolean | undefined;
    /**
     * Choices of this slash command option.
     *
     * @return {SlashCommandChoice[] | undefined}
     */
    get choices(): SlashCommandChoice[] | undefined;
    /**
     * Types of channel of this slash command option (only for `CHANNEL` type).
     *
     * @return {ChannelTypes[] | undefined}
     */
    get channelTypes(): ChannelTypes[] | undefined;
    /**
     * Minimal value of this slash command option
     * (only for `INTEGER` and `NUMBER` types).
     *
     * @return {number | undefined}
     */
    get minValue(): number | undefined;
    /**
     * Maximal value of this slash command option
     * (only for `INTEGER` and `NUMBER` types).
     *
     * @return {number | undefined}
     */
    get maxValue(): number | undefined;
    /**
     * Whether we should enable autocomplete of this slash command option.
     *
     * @return {boolean | undefined}
     */
    get autocomplete(): boolean | undefined;
    /**
     * This method allows you to convert this class to suitable
     * (for Discord) JSON.
     *
     * @return {object} Converted class.
     */
    toJSON(): object;
}
